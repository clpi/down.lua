---@meta data.ids.util
---
--- The data object for workspaces.
--- @class (exact) down.HasInfo: down.Tagged, down.HasScope, down.HasMetadata The info object.
---
--- @class (exact) down.Table<K, V>: { [K]?: V } The data object.
---
--- @class (exact) down.Workspaces: { default?: down.Id, [down.Id]: down.Workspace }
---
--- @class (exact) down.Mods: { [string]: down.Mod }
---
--- @class (exact) down.Data<V>: { [string]: V } The data object.
---
--- @class (exact) down.List<V>: { [integer]: V } List
---
--- @class down.HasId: { id: down.Uri } Has an ID that is a URI
---
--- @class down.HasName: { name: down.Id } Has name
---
--- @class down.HasUri: { uri: down.Uri } Has an ID that is a URI
---
--- @class down.HasCtx: { context?: down.Context } Has info
---
--- @class down.HasMetadata: { metadata?: table<any, any>} } Has meta
---
--- @class down.HasData<V>: { data?: down.Data<V> } Has meta
---
--- @class down.HasScope: { scope: down.Scope } Has scope
---
--- @class down.HasStore<V>: { store?: down.Store<V> } The store object.
---
--- @class down.Base.Store<V>: down.Base, { store?: down.Store<V> }
---
--- @class (exact) down.Tagged: { tags?: down.Tag[] } Has tags
---
--- @class (exact) down.Flagged: { flags?: down.Flag[] } Has tags
---
--- @class (exact) down.idUri: down.HasUri, down.HasName Has data store with list of values
---
--- @class (exact) down.HasList<V>: { data?: { [number]: V } } Has data list
---
--- @class (exact) down.base.Base: down.HasUri, down.HasName, down.HasInfo Has base
---
--- @class down.Base: { uri: down.Uri, id: down.Id, tags: down.Tag[], metadata: { [string]: any }, info?: {}  } HasInfo Has meta
---
--- @class (exact) down.base.Table<K, V>: down.Base, { data?: { [K]?: V } }
---
--- @class (exact) down.base.Data<V>: down.Base, { data?: { [string]?: V } }
---
--- @class (exact) down.base.List<V>: down.Base, { data?: { [integer]?: V } }
---
--- @class (exact) down.store.Set<V>: down.Base, { data?: { [integer]: V },  }
---
--- @class (exact) down.store.Table<V>: down.Base, { data?: { [string]?: V } }
---
--- @class (exact) down.base.Data<K, V>: down.HasUri, down.HasName, down.HasInfo, { data?: { [K]?: V } }
